/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ManageGetInstalledSoftwareResponseInstalledSoftwareInfo struct for ManageGetInstalledSoftwareResponseInstalledSoftwareInfo
type ManageGetInstalledSoftwareResponseInstalledSoftwareInfo struct {
	// Внутреннее имя (напр. redmine)
	Name *string `json:"name,omitempty"`
	// Отображаемое имя (напр. Redmine)
	DisplayName *string `json:"display_name,omitempty"`
	// Версия (напр. 1.0.1)
	Version *string `json:"version,omitempty"`
	// Тип ПО (панель управления, обычное ПО)
	Type *string `json:"type,omitempty"`
	// Адрес для доступа к ПО через http
	Address *string `json:"address,omitempty"`
	// Статус процесса установки ПО
	Status *string `json:"status,omitempty"`
}

// NewManageGetInstalledSoftwareResponseInstalledSoftwareInfo instantiates a new ManageGetInstalledSoftwareResponseInstalledSoftwareInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManageGetInstalledSoftwareResponseInstalledSoftwareInfo() *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo {
	this := ManageGetInstalledSoftwareResponseInstalledSoftwareInfo{}
	return &this
}

// NewManageGetInstalledSoftwareResponseInstalledSoftwareInfoWithDefaults instantiates a new ManageGetInstalledSoftwareResponseInstalledSoftwareInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManageGetInstalledSoftwareResponseInstalledSoftwareInfoWithDefaults() *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo {
	this := ManageGetInstalledSoftwareResponseInstalledSoftwareInfo{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) SetName(v string) {
	o.Name = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) SetVersion(v string) {
	o.Version = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) SetType(v string) {
	o.Type = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) SetAddress(v string) {
	o.Address = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) SetStatus(v string) {
	o.Status = &v
}

func (o ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableManageGetInstalledSoftwareResponseInstalledSoftwareInfo struct {
	value *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo
	isSet bool
}

func (v NullableManageGetInstalledSoftwareResponseInstalledSoftwareInfo) Get() *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo {
	return v.value
}

func (v *NullableManageGetInstalledSoftwareResponseInstalledSoftwareInfo) Set(val *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableManageGetInstalledSoftwareResponseInstalledSoftwareInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableManageGetInstalledSoftwareResponseInstalledSoftwareInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManageGetInstalledSoftwareResponseInstalledSoftwareInfo(val *ManageGetInstalledSoftwareResponseInstalledSoftwareInfo) *NullableManageGetInstalledSoftwareResponseInstalledSoftwareInfo {
	return &NullableManageGetInstalledSoftwareResponseInstalledSoftwareInfo{value: val, isSet: true}
}

func (v NullableManageGetInstalledSoftwareResponseInstalledSoftwareInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManageGetInstalledSoftwareResponseInstalledSoftwareInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


