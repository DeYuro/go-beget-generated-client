/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SnapshotSnapshot struct for SnapshotSnapshot
type SnapshotSnapshot struct {
	// snapshot id
	Id *string `json:"id,omitempty"`
	// vps id (uuid)
	VpsId *string `json:"vps_id,omitempty"`
	// vps name
	VpsName *string `json:"vps_name,omitempty"`
	// snapshot create date W3C
	DateCreate *string `json:"date_create,omitempty"`
	// bytes
	Size *string `json:"size,omitempty"`
	// current snapshot status
	Status *string `json:"status,omitempty"`
	OperatingSystem *StructuresOperatingSystem `json:"operating_system,omitempty"`
	// user title for snapshot
	Description *string `json:"description,omitempty"`
	Configuration *SnapshotRequiredConfiguration `json:"configuration,omitempty"`
	// cost per day in rub
	PriceDay *float64 `json:"price_day,omitempty"`
}

// NewSnapshotSnapshot instantiates a new SnapshotSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotSnapshot() *SnapshotSnapshot {
	this := SnapshotSnapshot{}
	return &this
}

// NewSnapshotSnapshotWithDefaults instantiates a new SnapshotSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotSnapshotWithDefaults() *SnapshotSnapshot {
	this := SnapshotSnapshot{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SnapshotSnapshot) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotSnapshot) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SnapshotSnapshot) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SnapshotSnapshot) SetId(v string) {
	o.Id = &v
}

// GetVpsId returns the VpsId field value if set, zero value otherwise.
func (o *SnapshotSnapshot) GetVpsId() string {
	if o == nil || o.VpsId == nil {
		var ret string
		return ret
	}
	return *o.VpsId
}

// GetVpsIdOk returns a tuple with the VpsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotSnapshot) GetVpsIdOk() (*string, bool) {
	if o == nil || o.VpsId == nil {
		return nil, false
	}
	return o.VpsId, true
}

// HasVpsId returns a boolean if a field has been set.
func (o *SnapshotSnapshot) HasVpsId() bool {
	if o != nil && o.VpsId != nil {
		return true
	}

	return false
}

// SetVpsId gets a reference to the given string and assigns it to the VpsId field.
func (o *SnapshotSnapshot) SetVpsId(v string) {
	o.VpsId = &v
}

// GetVpsName returns the VpsName field value if set, zero value otherwise.
func (o *SnapshotSnapshot) GetVpsName() string {
	if o == nil || o.VpsName == nil {
		var ret string
		return ret
	}
	return *o.VpsName
}

// GetVpsNameOk returns a tuple with the VpsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotSnapshot) GetVpsNameOk() (*string, bool) {
	if o == nil || o.VpsName == nil {
		return nil, false
	}
	return o.VpsName, true
}

// HasVpsName returns a boolean if a field has been set.
func (o *SnapshotSnapshot) HasVpsName() bool {
	if o != nil && o.VpsName != nil {
		return true
	}

	return false
}

// SetVpsName gets a reference to the given string and assigns it to the VpsName field.
func (o *SnapshotSnapshot) SetVpsName(v string) {
	o.VpsName = &v
}

// GetDateCreate returns the DateCreate field value if set, zero value otherwise.
func (o *SnapshotSnapshot) GetDateCreate() string {
	if o == nil || o.DateCreate == nil {
		var ret string
		return ret
	}
	return *o.DateCreate
}

// GetDateCreateOk returns a tuple with the DateCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotSnapshot) GetDateCreateOk() (*string, bool) {
	if o == nil || o.DateCreate == nil {
		return nil, false
	}
	return o.DateCreate, true
}

// HasDateCreate returns a boolean if a field has been set.
func (o *SnapshotSnapshot) HasDateCreate() bool {
	if o != nil && o.DateCreate != nil {
		return true
	}

	return false
}

// SetDateCreate gets a reference to the given string and assigns it to the DateCreate field.
func (o *SnapshotSnapshot) SetDateCreate(v string) {
	o.DateCreate = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *SnapshotSnapshot) GetSize() string {
	if o == nil || o.Size == nil {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotSnapshot) GetSizeOk() (*string, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *SnapshotSnapshot) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *SnapshotSnapshot) SetSize(v string) {
	o.Size = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SnapshotSnapshot) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotSnapshot) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SnapshotSnapshot) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SnapshotSnapshot) SetStatus(v string) {
	o.Status = &v
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *SnapshotSnapshot) GetOperatingSystem() StructuresOperatingSystem {
	if o == nil || o.OperatingSystem == nil {
		var ret StructuresOperatingSystem
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotSnapshot) GetOperatingSystemOk() (*StructuresOperatingSystem, bool) {
	if o == nil || o.OperatingSystem == nil {
		return nil, false
	}
	return o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *SnapshotSnapshot) HasOperatingSystem() bool {
	if o != nil && o.OperatingSystem != nil {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given StructuresOperatingSystem and assigns it to the OperatingSystem field.
func (o *SnapshotSnapshot) SetOperatingSystem(v StructuresOperatingSystem) {
	o.OperatingSystem = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SnapshotSnapshot) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotSnapshot) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SnapshotSnapshot) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SnapshotSnapshot) SetDescription(v string) {
	o.Description = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *SnapshotSnapshot) GetConfiguration() SnapshotRequiredConfiguration {
	if o == nil || o.Configuration == nil {
		var ret SnapshotRequiredConfiguration
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotSnapshot) GetConfigurationOk() (*SnapshotRequiredConfiguration, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *SnapshotSnapshot) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given SnapshotRequiredConfiguration and assigns it to the Configuration field.
func (o *SnapshotSnapshot) SetConfiguration(v SnapshotRequiredConfiguration) {
	o.Configuration = &v
}

// GetPriceDay returns the PriceDay field value if set, zero value otherwise.
func (o *SnapshotSnapshot) GetPriceDay() float64 {
	if o == nil || o.PriceDay == nil {
		var ret float64
		return ret
	}
	return *o.PriceDay
}

// GetPriceDayOk returns a tuple with the PriceDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotSnapshot) GetPriceDayOk() (*float64, bool) {
	if o == nil || o.PriceDay == nil {
		return nil, false
	}
	return o.PriceDay, true
}

// HasPriceDay returns a boolean if a field has been set.
func (o *SnapshotSnapshot) HasPriceDay() bool {
	if o != nil && o.PriceDay != nil {
		return true
	}

	return false
}

// SetPriceDay gets a reference to the given float64 and assigns it to the PriceDay field.
func (o *SnapshotSnapshot) SetPriceDay(v float64) {
	o.PriceDay = &v
}

func (o SnapshotSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.VpsId != nil {
		toSerialize["vps_id"] = o.VpsId
	}
	if o.VpsName != nil {
		toSerialize["vps_name"] = o.VpsName
	}
	if o.DateCreate != nil {
		toSerialize["date_create"] = o.DateCreate
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.OperatingSystem != nil {
		toSerialize["operating_system"] = o.OperatingSystem
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	if o.PriceDay != nil {
		toSerialize["price_day"] = o.PriceDay
	}
	return json.Marshal(toSerialize)
}

type NullableSnapshotSnapshot struct {
	value *SnapshotSnapshot
	isSet bool
}

func (v NullableSnapshotSnapshot) Get() *SnapshotSnapshot {
	return v.value
}

func (v *NullableSnapshotSnapshot) Set(val *SnapshotSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotSnapshot(val *SnapshotSnapshot) *NullableSnapshotSnapshot {
	return &NullableSnapshotSnapshot{value: val, isSet: true}
}

func (v NullableSnapshotSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


