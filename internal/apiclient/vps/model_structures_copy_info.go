/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// StructuresCopyInfo struct for StructuresCopyInfo
type StructuresCopyInfo struct {
	// Идентификатор копии
	Id *string `json:"id,omitempty"`
	// Идентификатор VPS (uuid)
	VpsId *string `json:"vps_id,omitempty"`
	// Имя VPS, с которого создавалась резервная копия
	VpsName *string `json:"vps_name,omitempty"`
	// Дата создания копии в RFC3339
	Date *string `json:"date,omitempty"`
	OperatingSystem *StructuresOperatingSystem `json:"operating_system,omitempty"`
	// Общий размер резервной копии в байтах
	Size *string `json:"size,omitempty"`
	Configuration *StructuresCopyInfoConfiguration `json:"configuration,omitempty"`
}

// NewStructuresCopyInfo instantiates a new StructuresCopyInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStructuresCopyInfo() *StructuresCopyInfo {
	this := StructuresCopyInfo{}
	return &this
}

// NewStructuresCopyInfoWithDefaults instantiates a new StructuresCopyInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStructuresCopyInfoWithDefaults() *StructuresCopyInfo {
	this := StructuresCopyInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StructuresCopyInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresCopyInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StructuresCopyInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *StructuresCopyInfo) SetId(v string) {
	o.Id = &v
}

// GetVpsId returns the VpsId field value if set, zero value otherwise.
func (o *StructuresCopyInfo) GetVpsId() string {
	if o == nil || o.VpsId == nil {
		var ret string
		return ret
	}
	return *o.VpsId
}

// GetVpsIdOk returns a tuple with the VpsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresCopyInfo) GetVpsIdOk() (*string, bool) {
	if o == nil || o.VpsId == nil {
		return nil, false
	}
	return o.VpsId, true
}

// HasVpsId returns a boolean if a field has been set.
func (o *StructuresCopyInfo) HasVpsId() bool {
	if o != nil && o.VpsId != nil {
		return true
	}

	return false
}

// SetVpsId gets a reference to the given string and assigns it to the VpsId field.
func (o *StructuresCopyInfo) SetVpsId(v string) {
	o.VpsId = &v
}

// GetVpsName returns the VpsName field value if set, zero value otherwise.
func (o *StructuresCopyInfo) GetVpsName() string {
	if o == nil || o.VpsName == nil {
		var ret string
		return ret
	}
	return *o.VpsName
}

// GetVpsNameOk returns a tuple with the VpsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresCopyInfo) GetVpsNameOk() (*string, bool) {
	if o == nil || o.VpsName == nil {
		return nil, false
	}
	return o.VpsName, true
}

// HasVpsName returns a boolean if a field has been set.
func (o *StructuresCopyInfo) HasVpsName() bool {
	if o != nil && o.VpsName != nil {
		return true
	}

	return false
}

// SetVpsName gets a reference to the given string and assigns it to the VpsName field.
func (o *StructuresCopyInfo) SetVpsName(v string) {
	o.VpsName = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *StructuresCopyInfo) GetDate() string {
	if o == nil || o.Date == nil {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresCopyInfo) GetDateOk() (*string, bool) {
	if o == nil || o.Date == nil {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *StructuresCopyInfo) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *StructuresCopyInfo) SetDate(v string) {
	o.Date = &v
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *StructuresCopyInfo) GetOperatingSystem() StructuresOperatingSystem {
	if o == nil || o.OperatingSystem == nil {
		var ret StructuresOperatingSystem
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresCopyInfo) GetOperatingSystemOk() (*StructuresOperatingSystem, bool) {
	if o == nil || o.OperatingSystem == nil {
		return nil, false
	}
	return o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *StructuresCopyInfo) HasOperatingSystem() bool {
	if o != nil && o.OperatingSystem != nil {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given StructuresOperatingSystem and assigns it to the OperatingSystem field.
func (o *StructuresCopyInfo) SetOperatingSystem(v StructuresOperatingSystem) {
	o.OperatingSystem = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *StructuresCopyInfo) GetSize() string {
	if o == nil || o.Size == nil {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresCopyInfo) GetSizeOk() (*string, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *StructuresCopyInfo) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *StructuresCopyInfo) SetSize(v string) {
	o.Size = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *StructuresCopyInfo) GetConfiguration() StructuresCopyInfoConfiguration {
	if o == nil || o.Configuration == nil {
		var ret StructuresCopyInfoConfiguration
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresCopyInfo) GetConfigurationOk() (*StructuresCopyInfoConfiguration, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *StructuresCopyInfo) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given StructuresCopyInfoConfiguration and assigns it to the Configuration field.
func (o *StructuresCopyInfo) SetConfiguration(v StructuresCopyInfoConfiguration) {
	o.Configuration = &v
}

func (o StructuresCopyInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.VpsId != nil {
		toSerialize["vps_id"] = o.VpsId
	}
	if o.VpsName != nil {
		toSerialize["vps_name"] = o.VpsName
	}
	if o.Date != nil {
		toSerialize["date"] = o.Date
	}
	if o.OperatingSystem != nil {
		toSerialize["operating_system"] = o.OperatingSystem
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	return json.Marshal(toSerialize)
}

type NullableStructuresCopyInfo struct {
	value *StructuresCopyInfo
	isSet bool
}

func (v NullableStructuresCopyInfo) Get() *StructuresCopyInfo {
	return v.value
}

func (v *NullableStructuresCopyInfo) Set(val *StructuresCopyInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableStructuresCopyInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableStructuresCopyInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStructuresCopyInfo(val *StructuresCopyInfo) *NullableStructuresCopyInfo {
	return &NullableStructuresCopyInfo{value: val, isSet: true}
}

func (v NullableStructuresCopyInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStructuresCopyInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


